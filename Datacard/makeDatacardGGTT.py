import sys
from commonObjects import lumiMap

header="""
CMS HGG Datacard - 2018 - 13TeV
Auto-generated by flashggFinalFits/Datacard/makeDatacardGGTT.py
Run with: combine
---------------------------------------------
imax *
jmax *
kmax *
---------------------------------------------

"""

nCats = int(sys.argv[1])
masses = [sys.argv[2]]

shape_template="""
shapes      gravitonm%(m)s_%(year)s_hgg             gravitonm%(m)scat%(catnum)s_%(year)s        ./Models/signal/sig_%(year)s_cat%(catnum)s.root wsig_13TeV:sig
shapes      bkg_mass                          gravitonm%(m)scat%(catnum)s_%(year)s        ./Models/background/CMS-HGG_multipdf_gravitonm%(m)scat%(catnum)s_%(year)s.root multipdf:CMS_hgg_gravitonm%(m)scat%(catnum)s_%(year)s_13TeV_bkgshape
shapes      data_obs                          gravitonm%(m)scat%(catnum)s_%(year)s        ./Models/background/CMS-HGG_multipdf_gravitonm%(m)scat%(catnum)s_%(year)s.root multipdf:roohist_data_mass_gravitonm%(m)scat%(catnum)s"""

separator = "-"*129 + "\n"

years = [int(each) for each in sys.argv[3:]]

shapes=""
for year in years:
  for catnum in range(nCats):
    for m in masses:
      shapes += shape_template % {
        'year': str(year),
        'catnum': str(catnum),
        'm': m
      }




datacard=""
datacard+=header
datacard+=shapes
datacard+="\n\n"

datacard+=separator
datacard+= "bin".ljust(20) + "".join([("gravitonm%scat%d_%d"%(m, catnum, year)).ljust(30) for m in masses for catnum in range(nCats) for year in years]) + "\n"
datacard+= "observation".ljust(20) + "".join(["-1".ljust(30) for m in masses for catnum in range(nCats) for year in years]) + "\n"

datacard+=separator
datacard+= "bin".ljust(20) + "".join([("gravitonm%scat%d_%d"%(m, catnum, year)).ljust(30) for m in masses for catnum in range(nCats) for year in years for i in range(2)]) + "\n"
datacard+= "process".ljust(20) + "".join([("gravitonm%s_%d_hgg"%(m, year)).ljust(30) if i==0 else "bkg_mass".ljust(30) for m in masses for catnum in range(nCats) for year in years for i in range(2)]) + "\n"
datacard+= "process".ljust(20) + "".join(["0".ljust(30) if i==0 else "1".ljust(30) for m in masses for catnum in range(nCats) for year in years for i in range(2)]) + "\n"
datacard+= "rate".ljust(20) + "".join([("%.7f"%(lumiMap[str(year)]*1000)).ljust(30) if i==0 else "1.0".ljust(30) for m in masses for catnum in range(nCats) for year in years for i in range(2)]) + "\n"

datacard+=separator
datacard+="\n"
datacard+=separator
datacard+="\n"

datacard+= "\n".join(["pdfindex_gravitonm%scat%d_%d_13TeV   discrete"%(m, catnum, year) for m in masses for catnum in range(nCats) for year in years])

print(datacard)